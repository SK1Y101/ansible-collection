---
- environment:
    MAAS_HOST: "{{ host }}"
    MAAS_TOKEN_KEY: "{{ token_key }}"
    MAAS_TOKEN_SECRET: "{{ token_secret }}"
    MAAS_CLIENT_KEY: "{{ client_key }}"


  block:
  - name: Remove/delete an instance
    canonical.maas.instance:
      hostname: polona
      state: absent

  - name: Create virtual machine with two disks and a network interface.
    canonical.maas.vm_host_machine:
      hostname: polona
      vm_host: sunny-raptor
      cores: 2
      memory: 2000
      network_interfaces:
        name: my_first
        subnet_cidr: "10.10.10.0/24"
      storage_disks:
        - size_gigabytes: 3
    register: initial_machine
  - ansible.builtin.assert:
      that:
        - initial_machine is changed
        - initial_machine.record.hostname == polona
        - initial_machine.record.memory == 2048
        - initial_machine.record.cores == 2

  - name: Deploy machine
    canonical.maas.instance:
      hostname: polona
      state: deployed
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "focal"
        - machine.record.status == "Deployed"
    
  - name: Deploy machine - idempotence
    canonical.maas.instance:
      hostname: polona
      state: deployed
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is not changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "focal"
        - machine.record.status == "Deployed"
  
  - name: Release machine
    canonical.maas.instance:
      hostname: polona
      state: ready
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "focal"
        - machine.record.status == "Ready"
  
  - name: Release machine - idempotence
    canonical.maas.instance:
      hostname: polona
      state: ready
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is not changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "focal"
        - machine.record.status == "Ready"
  
  - name: Deploy machine with another OS
    canonical.maas.instance:
      hostname: polona
      state: deployed
      deploy_params:
        osystem: ubuntu
        distro_series: jammy
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "jammy"
        - machine.record.status == "Deployed"

  - name: Release machine
    canonical.maas.instance:
      hostname: polona
      state: ready
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.hostname == "polona"
        - machine.record.memory == 2048
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "jammy"
        - machine.record.status == "Ready"
  
  - name: Remove/delete machine
    canonical.maas.instance:
      hostname: polona
      state: absent
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
  
  - name: Remove/delete machine - idempotence
    canonical.maas.instance:
      hostname: polona
      state: absent
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is not changed

  - name: Deploy new machine with default OS and allocation constraints
    canonical.maas.instance:
      state: deployed
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.memory == 2048
        - machine.record.cores == 1
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "focal"
        - machine.record.status == "Deployed"
  
  - name: Release machine (ephemeral machine is deleted)
    canonical.maas.instance:
      hostname: "{{ machine.record.hostname }}"
      state: ready
  - ansible.builtin.assert:
      that:
        - machine is changed

  - name: Deploy new machine with custom OS and allocation constraints
    canonical.maas.instance:
      state: deployed
      allocate_params:
        cpu: 3
        memory: 2
      deploy_params:
        osystem: ubuntu
        distro_series: jammy
    register: machines
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.memory == 2048
        - machine.record.cores == 3
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "jammy"
        - machine.record.status == "Deployed"
  
  - name: Release machine (ephemeral machine is deleted)
    canonical.maas.instance:
      hostname: "{{ machine.record.hostname }}"
      state: ready
  - ansible.builtin.assert:
      that:
        - machine is changed

  - name: Deploy new machine with constraints that can't be meet
    canonical.maas.instance:
      state: deployed
      allocate_params:
        cpu: 20
        memory: 2
      deploy_params:
        osystem: ubuntu
        distro_series: jammy
    register: machines
  - ansible.builtin.assert:
      that:
        - machine is failed
        - machine is not changed
        - "'No machine matching the given constraints could be found' in machine.msg"
