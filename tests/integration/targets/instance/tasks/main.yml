---
- environment:
    MAAS_HOST: "{{ host }}"
    MAAS_TOKEN_KEY: "{{ token_key }}"
    MAAS_TOKEN_SECRET: "{{ token_secret }}"
    MAAS_CLIENT_KEY: "{{ client_key }}"


  block:
  # - name: Remove/delete an instance
  #   canonical.maas.instance:
  #     name: polona
  #     state: absent

   - name: Create virtual machine with two disks and a network interface.
     canonical.maas.vm_host_machine:
      machine_name: polona # TODO: wait for option to be implemented
      vm_host: sunny-raptor
      cores: 2
      memory: 2000
      network_interfaces:
        name: my_first
        subnet_cidr: "10.10.10.0/24"
      storage_disks:
        - size_gigabytes: 3
    register: initial_machine
  - ansible.builtin.assert:
      that:
        - initial_machine is changed
        - initial_machine.record.machine_name == polona
        - initial_machine.record.memory == 2000
        - initial_machine.record.cores == 2

  - name: Deploy machine
    canonical.maas.instance:
      hostname: polona
      state: deployed
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.machine_name == "polona" # change when 
        - machine.record.machine_name == "polona"
        - machine.record.memory == 2000
        - machine.record.cores == 2
        - machine.record.osystem == "ubuntu"
        - machine.record.distro_series == "Focal Fossa"
    
  - name: Deploy machine - idempotence
    canonical.maas.instance:
      hostname: polona
      state: deployed
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is not changed

  - name: Release random machine with custom constraints
    canonical.maas.instance:
      state: ready
      allocate_params:
        cpu: 1
        memory: 2000
    register: machine
  - ansible.builtin.assert:
      that:
        - machine is changed
        - machine.record.cores == 2 # 
        - machine.record.machine_name == polona

  - name: Commission new machine with default constraints
    canonical.maas.instance:
      state: ready

  # - name: Release machine
  #   canonical.maas.instance:
  #     hostname: polona
  #     state: ready

  # - name: Deploy already commissioned machine
  #   canonical.maas.instance:
  #     hostname: polona
  #     state: deployed

  # - name: Deploy already commissioned machine with custom OS and OS series
  #   canonical.maas.instance:
  #     hostname: polona
  #     state: deployed
  #     deploy_params:
  #       osystem: ubuntu
  #       distro_series: focal

  # - name: Deploy new machine with default OS and allocation constraints
  #   canonical.maas.instance:
  #     state: deployed

  # - name: Deploy new machine with custom OS and allocation constraints
  #   canonical.maas.instance:
  #     state: deployed
  #     allocate_params:
  #       cpu: 1
  #       memory: 2
  #     deploy_params:
  #       osystem: ubuntu
  #       distro_series: focal
  #   register: machines
    # - debug:
    #     var: machines

  # - name: Remove/delete an instance
  #   canonical.maas.instance:
  #     hostname: polona
  #     state: absent
  #   register: 