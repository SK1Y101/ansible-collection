---
- environment:
    MAAS_HOST: "{{ host }}"
    MAAS_TOKEN_KEY: "{{ token_key }}"
    MAAS_TOKEN_SECRET: "{{ token_secret }}"
    MAAS_CUSTOMER_KEY: "{{ customer_key }}"


  block:
    # ----------------------------------Cleanup------------------------------------
    # - name: Delete machine
    #   canonical.maas.machine: &delete-machine
    #     fqdn: block-device-test.maas
    #     state: absent
  
    # - name: Delete block device
    #   canonical.maas.block_device: &delete-block-device
    #     machine_fqdn: block-device-test.maas
    #     name: my-block-device
    #     state: absent

    # -----------------------------------Info------------------------------------
    # - name: List block devices of selected machine
    #   canonical.maas.block_device_info:
    #     machine_fqdn: block-device-test.maas
    #   register: block_devices

    # - name: List specific block device of a specific machine
    #   canonical.maas.block_device_info:
    #     machine_fqdn: block-device-test.maas
    #     name: "{{ block_devices.records.0.name }}"
    #   register: block_device
    # - ansible.builtin.assert:
    #     that:
    #       - block_device.records.0.name == block_devices.records.0.name

    # ------------------------------------Job------------------------------------
    # - name: Create virtual machine with two disks and a network interface.
    #   canonical.maas.vm_host_machine:
    #     hostname: block-device-test
    #     vm_host: crisp-skunk
    #     cores: 1
    #     memory: 2000
    #     network_interfaces:
    #       label_name: my_first
    #       subnet_cidr: "10.10.10.0/24"
    #     storage_disks:
    #       - size_gigabytes: 8
    #   register: initial_machine
    # - ansible.builtin.assert:
    #     that:
    #       - initial_machine is changed
    #       - initial_machine.record.hostname == "block-device-test"
    #       - initial_machine.record.memory == 2000
    #       - initial_machine.record.cores == 1
    
    - name: Create block device on block-device-test - required together
      canonical.maas.block_device:
        machine_fqdn: block-device-test.maas
        name: my-block-device
        state: present
        size_gigabytes: 27
        model: test
      ignore_errors: true
      register: block_device
    - ansible.builtin.assert:
        that:
          - block_device is failed
          - "'parameters are required together: model, serial' in block_device.msg"
    
    - name: Create block device on block-device-test - mutually exclusive
      canonical.maas.block_device:
        machine_fqdn: block-device-test.maas
        name: my-block-device
        state: present
        size_gigabytes: 27
        model: test
        id_path: /test
      ignore_errors: true
      register: block_device
    - ansible.builtin.assert:
        that:
          - block_device is failed
          - "'parameters are mutually exclusive: model|id_path' in block_device.msg"

    - name: Create block device on block-device-test
      canonical.maas.block_device: &create-block-device
        machine_fqdn: block-device-test.maas
        name: my-block-device
        state: present
        id_path: /dev/vdb
        size_gigabytes: 27
        tags: 
          - ssd
        # block_size: 512
        is_boot_device: true # where in return is this seen?
        partitions:
          - size_gigabytes: 10
            fs_type: ext4
            label: media
            mount_point: /media
            bootable: true
          - size_gigabytes: 15
            fs_type: ext4
            mount_point: /storage
            bootable: false
            tags: my_partition
      register: block_device
    - ansible.builtin.assert:
        that:
          - block_device is changed
          - block_device.record.name == "my-block-device"
          - block_device.record.size == 27
          - block_device.record.block_size == 512
          - block_device.record.tags.0 == "ssd"
          - block_device.record.id_path == "/dev/vdb"
    
    - name: Create block device on block-device-test - idempotence
      canonical.maas.block_device: &create-block-device
      register: block_device
    - ansible.builtin.assert:
        that:
          - block_device is not changed
          - block_device.record.name == "my-block-device"
          - block_device.record.size == 27
          - block_device.record.block_size == 512
          - block_device.record.tags.0 == "ssd"
          - block_device.record.id_path == "/dev/vdb"
      
    - name: Update block device on block-device-test
      canonical.maas.block_device: &create-block-device
        machine_fqdn: block-device-test.maas
        name: my-block-device
        state: present
        id_path: /dev/vdb
        size_gigabytes: 27
        tags: 
          - ssd
        # block_size: 512
        is_boot_device: true # where in return is this seen?
        partitions:
          - size_gigabytes: 10
            fs_type: ext4
            label: media
            mount_point: /media
            bootable: true
          - size_gigabytes: 15
            fs_type: ext4
            mount_point: /storage
            bootable: false
            tags: my_partition
      register: block_device
    - ansible.builtin.assert:
        that:
          - block_device is changed
          - block_device.record.name == "my-block-device"
          - block_device.record.size == 27
          - block_device.record.block_size == 512
          - block_device.record.tags.0 == "ssd"
          - block_device.record.id_path == "/dev/vdb"

    # # ----------------------------------Cleanup------------------------------------
    # - name: Delete machine
    #   canonical.maas.machine: &delete-machine
    #     fqdn: block-device-test.maas
    #     state: absent
  
    # - name: Delete block device
    #   canonical.maas.block_device: &delete-block-device
    #     machine_fqdn: block-device-test.maas
    #     name: my-block-device
    #     state: absent
