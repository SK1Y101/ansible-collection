---
- environment:
    MAAS_HOST: "{{ host }}"
    MAAS_TOKEN_KEY: "{{ token_key }}"
    MAAS_TOKEN_SECRET: "{{ token_secret }}"
    MAAS_CUSTOMER_KEY: "{{ customer_key }}"


  block:
# ----------------------------------Cleanup----------------------------------------------------------------------------
    - name: Delete machine
      canonical.maas.instance:
        fqdn: integration-test-nic-link.maas
        state: absent

# ----------------------------------Setup----------------------------------------------------------------------------
    - name: Create virtual machine with name integration-test-nic-link.
      canonical.maas.vm_host_machine:
        hostname: integration-test-nic-link
        vm_host: crisp-skunk
        cores: 2
        memory: 2000
        network_interfaces:
          label_name: my_first
          subnet_cidr: "10.10.10.0/24"
      register: machine
    - ansible.builtin.assert:
        that:
          - machine is succeeded
          - machine is changed

    - name: Get info from created machine.
      canonical.maas.machine_info:
        fqdn: integration-test-nic-link.maas
      register: machine_info
    - ansible.builtin.assert:
        that:
          - machine_info is succeeded
          - machine_info is not changed
          - machine_info.records
          - machine_info.records | length == 1
          - machine_info.records.0.fqdn == "integration-test-nic-link.maas"
          - machine_info.records.0.cpu_count == 2
          - machine_info.records.0.interface_set | length == 1
          - machine_info.records.0.interface_set.0.name == "my_first"
          - machine_info.records.0.interface_set.0.links.0.subnet.cidr == "10.10.10.0/24"

# ----------------------------------Idempotence check------------------------------------------------------------------------
    - name: Create virtual machine with name integration-test-nic-link. (Idempotence)
      canonical.maas.vm_host_machine:
        hostname: integration-test-nic-link
        vm_host: crisp-skunk
        cores: 2
        memory: 2000
        network_interfaces:
          label_name: my_first
          subnet_cidr: "10.10.10.0/24"
      register: machine_idempotence
    - ansible.builtin.assert:
        that:
          - machine_idempotence is succeeded
          - machine_idempotence is not changed

    - name: Get info from created machine. (Idempotence)
      canonical.maas.machine_info:
        fqdn: integration-test-nic-link.maas
      register: machine_info
    - ansible.builtin.assert:
        that:
          - machine_info is succeeded
          - machine_info is not changed
          - machine_info.records
          - machine_info.records | length == 1
          - machine_info.records.0.fqdn == "integration-test-nic-link.maas"
          - machine_info.records.0.cpu_count == 2
          - machine_info.records.0.interface_set | length == 1
          - machine_info.records.0.interface_set.0.name == "my_first"
          - machine_info.records.0.interface_set.0.links.0.subnet.cidr == "10.10.10.0/24"

# ----------------------------------Job----------------------------------------------------------------------------
    - name: Create new alias on machine with name integration-test-nic-link.
      canonical.maas.network_interface_link:
        machine: integration-test-nic-link.maas
        state: present
        network_interface: my_first
        subnet: '10.10.10.0/24'
        mode: DHCP
      register: nic
    - ansible.builtin.assert:
        that:
          - nic is succeeded
          - nic is changed

    - name: Get info from created machine.
      canonical.maas.machine_info:
        fqdn: integration-test-nic-link.maas
      register: machine_info
    - ansible.builtin.assert:
        that:
          - machine_info is succeeded
          - machine_info is not changed
          - machine_info.records
          - machine_info.records | length == 1
          - machine_info.records.0.fqdn == "integration-test-nic-link.maas"
          - machine_info.records.0.interface_set | length == 1
          - machine_info.records.0.interface_set.0.links | length == 1
          - machine_info.records.0.interface_set.0.links.0.mode == "dhcp"

# ----------------------------------Idempotence check------------------------------------------------------------------------
    - name: Create new alias on machine with name integration-test-nic-link. (Idempotence)
      canonical.maas.network_interface_link:
        machine: integration-test-nic-link.maas
        state: present
        network_interface: my_first
        subnet: '10.10.10.0/24'
        mode: DHCP
      register: nic
    - ansible.builtin.assert:
        that:
          - nic is succeeded
          - nic is not changed

    - name: Get info from created machine. (Idempotence)
      canonical.maas.machine_info:
        fqdn: integration-test-nic-link.maas
      register: machine_info
    - ansible.builtin.assert:
        that:
          - machine_info is succeeded
          - machine_info is not changed
          - machine_info.records
          - machine_info.records | length == 1
          - machine_info.records.0.fqdn == "integration-test-nic-link.maas"
          - machine_info.records.0.interface_set | length == 1
          - machine_info.records.0.interface_set.0.links | length == 1
          - machine_info.records.0.interface_set.0.links.0.mode == "dhcp"

# ----------------------------------Cleanup----------------------------------------------------------------------------
    - name: Delete machine
      canonical.maas.instance:
        fqdn: "{{ machine.record.fqdn }}"
        state: absent
